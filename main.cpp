
//main.cpp
#include "GameEngine.h"
#include "mbed.h"
#include "N5110.h"
#include "Joystick.h"
#include "Spaceship.h"
#include "Bullet.h"
#include <cstdlib>
#include <string>

N5110 lcd(PC_7, PA_9, PB_10, PB_5, PB_3, PA_10);
Joystick joystick(PC_3, PC_2);
DigitalIn button3(PC_10);
GameEngine game;
Spaceship spaceship;

// Define main menu sprites
const int Pointer[5][3]= {
	{ 0,0,1 },
	{ 0,1,1 },
	{ 1,1,1 },
	{ 0,1,1 },
	{ 0,0,1 }};

const int Earth[30][30]= {
	{ 0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0 },
	{ 0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0,1,0,0,0,1,1,1,0,0,0,0,0 },
	{ 0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0 },
	{ 0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0 },
	{ 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0 },
	{ 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,0,0 },
	{ 0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0 },
	{ 0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0 },
	{ 0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0 },
	{ 1,0,0,0,0,1,1,1,1,1,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1 },
	{ 1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1 },
	{ 1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1 },
	{ 1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1 },
	{ 1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1 },
	{ 1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1 },
	{ 0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0 },
	{ 0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0 },
	{ 0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0 },
	{ 0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0 },
	{ 0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0 },
	{ 0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0 },
	{ 0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0 },
	{ 0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0 },
	{ 0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0 }};
    
const int Saturn[20][18]= {
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1 },
	{ 0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,1,0 },
	{ 0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,0 },
	{ 0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0 },
	{ 0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0 },
	{ 0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0 },
	{ 0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0 },
	{ 0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0 },
	{ 0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0 },
	{ 0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0 },
	{ 0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0 },
	{ 0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0 },
	{ 0,0,1,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0 },
	{ 0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0 },
	{ 0,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0 },
	{ 1,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0 },
	{ 1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }};

const int Background[48][84]= {
    { 0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 }};
const int F35[19][18]= {
	{ 0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0 },
	{ 0,1,1,0,1,1,1,1,1,1,1,0,0,1,1,0,0,0 },
	{ 1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0 },
	{ 0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1 },
	{ 1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0 },
	{ 0,1,1,0,1,1,1,1,1,1,1,0,0,1,1,0,0,0 },
	{ 0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0 }};
const int Lock[6][5]= {
	{ 0,1,1,1,0 },
	{ 0,1,0,1,0 },
	{ 1,1,1,1,1 },
	{ 1,1,0,1,1 },
	{ 1,1,0,1,1 },
	{ 1,1,1,1,1 }};
const int SU57[19][18]= {
	{ 0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0 },
	{ 0,0,0,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0 },
	{ 1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0 },
	{ 0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0 },
	{ 1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
	{ 0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0 },
	{ 0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0 },
	{ 0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0 },
	{ 0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1 },
	{ 0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0 },
	{ 0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0 },
	{ 0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0 },
	{ 0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
	{ 1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0 },
	{ 0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0 },
	{ 1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0 },
	{ 0,0,0,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0 }
};

// Define main menu variables
int lives;
int increment;
bool option1 = true;
bool option2 = false;
bool option3 = false;
bool SU_57 = true;
bool F_35 = false;
bool play = false;
bool customize_menu = false;

void init();
void main_menu();
void render();
void game_over();
void customize();

int main() {

    init(); // Initialize the LCD and joystick

    while(1) { 

    if(!play){ // If not playing, show the main menu
    main_menu();
    }
    int fps = 50;
    thread_sleep_for(1000/fps);  // and wait for one frame period - millseconds
    
    if (lives > 0 && play) {  // keep looping while lives remain
        
        // read the joystick input and store in a struct
        game.update(joystick); // update the game engine based on input  
        lives = game.update(joystick);
        render(); // draw frame on screen
    }
    if(lives == 0){ // If no lives left, show game over screen
    game_over();
    }

    }
}

void init() {
    lcd.init(LPH7366_1);
    lcd.setContrast(0.5);
    lcd.setBrightness(0.5);
    joystick.init();
}

void main_menu(){

    // Initialize game parameters
    lives = 3;
    game._lives = 3;
    game.score = 0;

    if(option1){ // If option 1 is selected
        lcd.clear();
        lcd.drawSprite(0, 0, 48, 84, (int*) Background);
        lcd.drawSprite(70, 25, 5, 3, (int*) Pointer);
        lcd.drawSprite(46, -7, 30, 30, (int*) Earth);
        lcd.drawSprite(1, 1, 20, 18, (int*) Saturn);
        lcd.printString("   Play",8,3);  
        lcd.printString("  Tutorial",3,4);
        lcd.printString("  Customize",0,5);
        lcd.refresh();
        ThisThread::sleep_for(200ms);
        if(joystick.get_direction() == S){option2 = true;option3 = false;option1 = false;}
        if(button3 == 1){play = true;}
    }

    if(option2){ // If option 2 is selected

        game.Move = true;
        game.Shoot = false;
        game.Shoot2 = false;
        game.Meteors = false;
        game.Health = false;

        lcd.clear();
        lcd.drawSprite(0, 0, 48, 84, (int*) Background);
        lcd.drawSprite(70, 33, 5, 3, (int*) Pointer);
        lcd.drawSprite(46, -7, 30, 30, (int*) Earth);
        lcd.drawSprite(1, 1, 20, 18, (int*) Saturn);
        lcd.printString("   Play",8,3);  
        lcd.printString("  Tutorial",3,4);
        lcd.printString("  Customize",0,5);
        lcd.refresh();
        ThisThread::sleep_for(200ms);
        if(joystick.get_direction() == S){option1 = false;option3 = true;option2 = false;}
        if(joystick.get_direction() == N){option1 = true;option3 = false;option2 = false;}
        if(button3 == 1){game.Tutorial_menu = true;}
        game.tutorial(lcd, joystick);
    }

    if(option3){ // If option 3 is selected
        lcd.clear();
        lcd.drawSprite(0, 0, 48, 84, (int*) Background);
        lcd.drawSprite(70, 42, 5, 3, (int*) Pointer);
        lcd.drawSprite(46, -7, 30, 30, (int*) Earth);
        lcd.drawSprite(1, 1, 20, 18, (int*) Saturn);
        lcd.printString("   Play",8,3);  
        lcd.printString("  Tutorial",3,4);
        lcd.printString("  Customize",0,5);
        lcd.refresh();
        ThisThread::sleep_for(200ms);
        if(joystick.get_direction() == N){option1 = false;option2 = true;option3 = false;}
        if(button3 == 1){customize_menu = true;}
        customize();
    }

    
}

void render() {  // clear screen, re-draw and refresh
    lcd.clear(); 
    lcd.printString(std::to_string(game.get_score()).c_str(),60,0);
    game.draw(lcd);
    lcd.refresh();
}

void game_over() { 

        increment++;
        lcd.clear();
        lcd.printString("  GAME OVER ",0,1);  
        lcd.printString("  SCORE ",0,3);
        lcd.printString(std::to_string(game.get_score()).c_str(), 48,3);
        lcd.printString("  BEST ",0,5);
        lcd.printString(std::to_string(game.Best_score()).c_str(), 48, 5);
        lcd.refresh();
        ThisThread::sleep_for(250ms);
        lcd.clear();
        lcd.refresh();
        ThisThread::sleep_for(250ms);
        if(increment == 4) { // Reset game parameters
        play = false; 
        lives = 3; 
        increment = 0; 
    }
        
}

void customize(){
    while(customize_menu){
    
    if(SU_57){
    lcd.clear();
    lcd.drawSprite(5, 26, 19, 18, (int*) F35);
    lcd.drawSprite(5, 4, 19, 18, (int*) SU57);
    lcd.drawSprite(30, 11, 5, 3, (int*) Pointer);
    if(game.Best_score() < 10){lcd.drawSprite(30, 33, 6, 5, (int*) Lock); lcd.printString("SCORE",45,4); 
    lcd.printString("1000",47,5);}
    lcd.refresh();
    ThisThread::sleep_for(200ms);
    if(game.Best_score() >= 10 && joystick.get_direction() == S){F_35 = true;SU_57 = false;}
    if(button3 == 1){game.choose_sprite = 1; customize_menu = false;}
    }
    
    if(game.Best_score() >= 1000){
    if(F_35){
    lcd.clear();
    lcd.drawSprite(5, 26, 19, 18, (int*) F35);
    lcd.drawSprite(5, 4, 19, 18, (int*) SU57);
    lcd.drawSprite(30, 33, 5, 3, (int*) Pointer);
    lcd.refresh();
    ThisThread::sleep_for(200ms);
    if(joystick.get_direction() == N){SU_57 = true;F_35 = false;}
    if(button3 == 1){game.choose_sprite = 2; customize_menu = false;}
    }
    }
    }
}
